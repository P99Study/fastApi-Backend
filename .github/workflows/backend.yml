name: Build and Deploy FastAPI App to EC2

on:
  push:
    branches:
      - topic_docker

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        env:
            FRONTEND_URL: ${{ secrets.EC2_HOST_IP }}  # Pass the frontend URL as an environment variable
        run: |
          sudo docker build --build-arg FRONTEND_URL=${FRONTEND_URL} -t fastapi-backend-app .

      - name: Save Docker image to file
        run: |
          sudo docker save fastapi-backend-app | gzip > fastapi-backend-app.tar.gz

      - name: Install SSH client
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Set up SSH
        run: |
          echo "Set up SSH"
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Copy Docker image to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST_IP: ${{ secrets.EC2_HOST_IP }}
        run: |
          scp -i private_key.pem -o StrictHostKeyChecking=no fastapi-backend-app.tar.gz ubuntu@${{ secrets.EC2_HOST_IP }}:/home/ubuntu/

      - name: Deploy Docker container on EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_HOST_IP }} << 'EOF'
            # Load Docker image
            sudo docker load -i /home/ubuntu/fastapi-backend-app.tar.gz

            # Stop and remove existing container
            sudo docker stop fastapi-backend-container || true
            sudo docker rm fastapi-backend-container || true

            # Run new container
            sudo docker run -d --name fastapi-backend-container -p 8000:8000 fastapi-backend-app
          EOF